# remap the tmux prefix to Ctrl-a
unbind C-b
set -g prefix C-a
# allow Ctrl-a to be used in tmux when pressed repeatedly
bind-key -r C-a send-prefix

# reload tmux config
bind-key r source-file ~/.tmux.conf \; display-message "tmux reloaded!"

# seamlessly navigate between tmux sessions
bind-key c-j choose-tree

set -g default-terminal "screen-256color"
set -g status-keys "emacs"

#### colors

# sets the text to white and the background to black for the status bar
set -g status-style fg=white,bold,bg=default
# sets the window text in the status bar to white
set -g window-status-style fg=white,bg=default
# sets the active window text in the status bar to yellow
set -g window-status-current-style fg=yellow,bg=default
# sets the pane border to white
setw -g pane-border-style fg=white,bg=default
# sets the active pane border to yellow
setw -g pane-active-border-style fg=yellow,bg=default

#### status line styles

# sets the command line style looks like the status bar
set -g message-style fg=white,bold,bg=black
# centers the window list
set -g status-justify centre
# shows the session name + caret + space in the status line left
set -g status-left "[#s]"
# sets number of characters to show in the left status bar space
set -g status-left-length 30
# adds the time to the right side of the status bar
set -g status-right "%d %b %r"
# refreshes the status bar every 60 seconds
set -g status-interval 60
# show changes in other windows visually
setw -g monitor-activity on

#### window and pane management

# smart pane switching with awareness of vim splits.
# see: https://github.com/christoomey/vim-tmux-navigator
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqe '^[^txz ]+ +(\\s+\\/)?g?(view|n?vim?x?)(diff)?$'"
bind-key -n 'c-h' if-shell "$is_vim" 'send-keys c-h'  'select-pane -l'
bind-key -n 'c-j' if-shell "$is_vim" 'send-keys c-j'  'select-pane -d'
bind-key -n 'c-k' if-shell "$is_vim" 'send-keys c-k'  'select-pane -u'
bind-key -n 'c-l' if-shell "$is_vim" 'send-keys c-l'  'select-pane -r'
tmux_version='$(tmux -v | sed -en "s/^tmux ([0-9]+(.[0-9]+)?).*/\1/p")'
if-shell -b '[ "$(echo "$tmux_version < 3.0" | bc)" = 1 ]' \
    "bind-key -n 'c-\\' if-shell \"$is_vim\" 'send-keys c-\\'  'select-pane -l'"
if-shell -b '[ "$(echo "$tmux_version >= 3.0" | bc)" = 1 ]' \
    "bind-key -n 'c-\\' if-shell \"$is_vim\" 'send-keys c-\\\\'  'select-pane -l'"

bind-key -t copy-mode-vi 'c-h' select-pane -l
bind-key -t copy-mode-vi 'c-j' select-pane -d
bind-key -t copy-mode-vi 'c-k' select-pane -u
bind-key -t copy-mode-vi 'c-l' select-pane -r
bind-key -t copy-mode-vi 'c-\' select-pane -l

# start windows and panes at 1, not 0
set -g base-index 1
setw -g pane-base-index 1

# renumber windows as they're destroyed
set -g renumber-windows on

# break a pane into its own window
bind-key b break-pane -d

# new windows and panes use the current path to start session
bind-key c new-window -c '#{pane_current_path}'
# hyphen shows we're adding a horizontal bar to the window
bind-key - split-window -v -c '#{pane_current_path}'
# backslash shares key with pipe, which is a vertical bar
bind-key \\ split-window -h -c '#{pane_current_path}'

# pane resizing
# shift + arrows for fine grained movement
bind -n S-Left resize-pane -L 2
bind -n S-Right resize-pane -R 2
bind -n S-Down resize-pane -D 1
bind -n S-Up resize-pane -U 1

# ctrol + arrows for greater movement
bind -n C-Left resize-pane -L 10 
bind -n C-Right resize-pane -R 10
bind -n C-Down resize-pane -D 5
bind -n C-Up resize-pane -U 5

#### scroll-back / copy mode

# use vim keybindings in copy mode
setw -g mode-keys vi

# # setup 'v' to begin selection as in Vim
# bind-key -t vi-copy v begin-selection
# bind-key -t vi-copy y copy-pipe "reattach-to-user-namespace pbcopy"

# # update default binding of `Enter` to also use copy-pipe
# unbind -t vi-copy Enter
# bind-key -t vi-copy Enter copy-pipe "reattach-to-user-namespace pbcopy"
